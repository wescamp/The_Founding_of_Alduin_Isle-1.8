#  general tips:

# Make your life easier by using a sensible code editor with wml syntax highlighting. This prevents you from making silly mistakes like spelling errors.
# Good are notepad++ for windows, and Kate for Linux.
# Emacs' wml mode is rewarding and is cross-platform, but emacs is very user hostile, at the start at least.
# Microsoft Office and Open Office are NOT suitable.
# In the very near future (August 2010) there will be an eclipse plugin around that is worth looking at (still in development).

# Proceed slowly. Change only a little, test often. That way you find mistakes quickly.

# Read the reference wml and the "How to easily debug WML" - thread in the wesnoth forum.

# windows users:
# Be careful to spell referenced filenames correctly inside of your wml code (capitalization), since windows is case insensitive in that aspect, while other operating systems are case sensitive.
# Always use only forward slashes (/) as separators in paths to files. Only windows is using backslash (\).
# Both things would cause errors on other operating systems.

#########################################################################################################################

# This file _main.cfg is the only campaign file read directly by the wesnoth engine.
# It includes commands telling something to the engine. A line starting with # is a comment (it is ignored by the engine) unless one of a limited amount of special words follows.

# The textdomain tells the engine where to look for translations.
[textdomain]
	name="wesnoth-The_Founding_of_Alduin_Isle"
	path="data/add-ons/The_Founding_of_Alduin_Isle/translations"
[/textdomain]

# Use the translation files from this campaign's /translations subdirectory for this file:
# textdomain wesnoth-The_Founding_of_Alduin_Isle


[campaign]
	id=The_Founding_of_Alduin_Isle # Needed to connect savefiles with their campaign.
	name=_ "The Founding of Alduin Isle" # Displayed name to the user.
	abbrev=_"TFoAI" # Abbreviation used in savefiles.
	define=THE_FOUNDING_OF_ALDUIN_ISLE # This symbol is defined once the player chooses to play the campaign.

	difficulties=EASY,NORMAL,HARD # which various difficulties the campaign shall have 
	difficulty_descriptions=_"&units/human-magi/mage-attack-magic1.png=Apprentice;*&units/human-magi/red-mage-attack-magic-1.png=Experianced;&units/human-magi/arch-mage-attack-magic-1.png=Knowledgable" # sets up the difficulties selection menu

	icon=data\core\images\units\human-magi\arch-mage.png
	image=data/add-ons/The_Founding_of_Alduin_Isle/images/icon.png
	description=_ "Set in the time during the first years of the Founding of Wesnoth, this is the story of the Great Mage Alduin and the last of the Green Isle Magi on their journey to, the battles for, and the founding of the Isle of Alduin.

NOTE: this is my first campaign. i had abandoned it 2 years ago and fixed it up with help from a campaign skeleton called A_Simple_Campaign. Please leave comments in the campaign topic i will make, so i can improve it. 

This is not yet complete as it only has 4 scenarios, one of which is just dialog." # campaign description right of the campaign list when selected

	first_scenario=01_A_Place_for_Learning # Scenario that gets chosen first from the scenario list. It looks for a scenario with this id, not with this filename.
[/campaign]

# Enter the following code block only if the player has chosen to play the campaign, thus preventing overwrite conflicts and speeding wesnoth up during startup:
#ifdef THE_FOUNDING_OF_ALDUIN_ISLE

# Makes images available as subpaths of the .../The_Founding_of_Alduin_Isle/images/ directory.
[binary_path]
        path=data/add-ons/The_Founding_of_Alduin_Isle/
[/binary_path]

# {filepath} loads files from filepath
# ~ tells to look in the userdata directory, otherwise the wesnoth engine would look in the main data directory
# The order of these commands is important. Macros, which are defined in ~add-ons/The_Founding_of_Alduin_Isle/macros, are needed in the scenarios, thus they must be read previously to the scenarios.
{~add-ons/The_Founding_of_Alduin_Isle/macros}

{~add-ons/The_Founding_of_Alduin_Isle/scenarios}
# +units: Perform this command in that [units] tag which was read last - a tag in the wesnoth main data directory (I suppose...) and thus add custom units to the units known by the wesnoth engine.
[+units]
        {~add-ons/The_Founding_of_Alduin_Isle/units}
[/units]

#endif